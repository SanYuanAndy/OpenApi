apply plugin: "com.android.application"

android {
    compileSdkVersion 28

    boolean needReleaseSign = parseBoolean("${NeedReleaseSign}")

    defaultConfig {
        applicationId "com.open.utils.case.all"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        machine {
            storeFile file('keystore/machine.keystore')
            storePassword "${STOREPASSWORD}"
            keyAlias "${KEYALIAS}"
            keyPassword "${KEYPASSWORD}"
        }
    }


    buildTypes {

        debug {
            minifyEnabled false

            File f = new File("app/keystore/machine.keystore")
            if (f.exists() && needReleaseSign) {
                println "NeedReleaseSign"
                signingConfig signingConfigs.machine
            }

        }

        release {
            minifyEnabled false
            File f = new File("app/keystore/machine.keystore")
            if (f.exists() && needReleaseSign) {
                println "NeedReleaseSign"
                signingConfig signingConfigs.machine
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //implementation fileTree(dir: "libs", include: ["*.jar"])
    //implementation project(':openapi')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(":multitheme")
    implementation project(":comm")
    implementation project(':ipc')
    implementation project(':debugger')
    implementation project(':mocklocation')


}

gradle.taskGraph.beforeTask { task ->
//    if ( task.getType() == "javaPreCompileDebug") {
//        println 11111
//        task.options.compilerArgs << '-Xbootclasspath/p:app/libs/framework.jar'
//    }

    tasks.withType(JavaCompile) {
        // println 5555
        // options.compilerArgs << '-Xbootclasspath/p:app/libs/framework.jar'
    }

}

def boolean parseBoolean(String value) {
    boolean ret = false;
    try {
        ret = Boolean.parseBoolean(value);
    } catch(Exception e) {

    }
    return ret;
}